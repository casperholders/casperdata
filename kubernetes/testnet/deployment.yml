apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: casperdata-parser-testnet
  name: casperdata-parser-testnet
spec:
  selector:
    matchLabels:
      app: casperdata-parser-testnet
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: casperdata-parser-testnet
        name: casperdata-parser-testnet
    spec:
      containers:
        - name: casperdata-parser-testnet
          image: killianh/casperdata
          imagePullPolicy: Always
          resources: { }
          envFrom:
            - configMapRef:
                name: casperdata-config-testnet
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: casperdata-testnet
  name: casperdata-testnet
spec:
  selector:
    matchLabels:
      app: casperdata-testnet
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: casperdata-testnet
        name: casperdata-testnet
    spec:
      containers:
        - name: casperdata-testnet
          image: postgrest/postgrest:v8.0.0.20211102
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
          resources: { }
          envFrom:
            - configMapRef:
                name: postgrest-config-testnet
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: casperdata-db-testnet
  name: casperdata-db-testnet
spec:
  selector:
    matchLabels:
      app: casperdata-db-testnet
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: casperdata-db-testnet
        name: casperdata-db-testnet
    spec:
      containers:
        - name: casperdata-db-testnet
          image: postgres:latest
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /backup
              name: postgres-storage-testnet
          env:
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
            - name: POSTGRES_DB
              value: "casperdata-testnet"
      volumes:
        - name: postgres-storage-testnet
          hostPath:
            # Ensure the file directory is created.
            path: /var/volumes/postgres-backups-testnet
            type: DirectoryOrCreate
        - name: nginx-volume-testnet
          configMap:
            name: nginx-config-testnet
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: casperbackup-testnet
  name: casperbackup-testnet
spec:
  selector:
    matchLabels:
      app: casperbackup-testnet
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: casperbackup-testnet
        name: casperbackup-testnet
    spec:
      containers:
        - name: casperbackup-testnet
          image: nginx:latest
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /usr/share/nginx/html
              name: postgres-storage-testnet
            - mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
              name: nginx-volume-testnet
      volumes:
        - name: postgres-storage-testnet
          hostPath:
            # Ensure the file directory is created.
            path: /var/volumes/postgres-backups-testnet
            type: DirectoryOrCreate
        - name: nginx-volume-testnet
          configMap:
            name: nginx-config-testnet
      restartPolicy: Always
